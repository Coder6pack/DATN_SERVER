// Defining enums
enum MediaType {
  IMAGE
  VIDEO
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum OrderStatus {
  PENDING_PAYMENT
  PENDING_PICKUP
  PENDING_DELIVERY
  DELIVERED
  RETURNED
  CANCELLED
}

enum VerificationCodeType {
  REGISTER
  FORGOT_PASSWORD
  LOGIN
  DISABLE_2FA
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum HTTPMethod {
  GET
  POST
  PUT
  DELETE
  PATCH
  OPTIONS
  HEAD
}

// Defining tables
Table User {
  id integer [primary key, increment]
  email varchar(500)
  name varchar(500)
  password varchar(500)
  phoneNumber varchar(50)
  avatar varchar(1000) [null]
  totpSecret varchar(1000) [null]
  address varchar(500) [default: '']
  status UserStatus [default: 'INACTIVE']
  roleId integer
  createdById integer [null]
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

Table VerificationCode {
  id integer [primary key, increment]
  email varchar(500)
  code varchar(50)
  type VerificationCodeType
  expiresAt datetime
  createdAt datetime [default: `now()`]

  indexes {
    (email, code, type) [unique]
    expiresAt
  }
}

Table Device {
  id integer [primary key, increment]
  userId integer
  userAgent varchar
  ip varchar
  lastActive datetime
  createdAt datetime [default: `now()`]
  isActive boolean [default: true]
}

Table RefreshToken {
  token varchar(1000) [unique]
  userId integer
  expiresAt datetime
  createdAt datetime [default: `now()`]
  deviceId integer

  indexes {
    expiresAt
  }
}

Table Permission {
  id integer [primary key, increment]
  name varchar(500)
  description varchar
  path varchar(1000)
  method HTTPMethod
  module varchar(500) [default: '']
  createdById integer [null]
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

Table Role {
  id integer [primary key, increment]
  name varchar(500)
  description varchar
  isActive boolean [default: true]
  createdById integer [null]
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

Table Product {
  id integer [primary key, increment]
  name varchar(500)
  description varchar
  basePrice float
  virtualPrice float
  brandId integer
  images string[] // Array of strings
  variants json // JSON type for variants
  createdById integer
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

Table Category {
  id integer [primary key, increment]
  name varchar(500)
  logo varchar(1000) [null]
  isHot boolean [null]
  parentCategoryId integer [null]
  createdById integer [null]
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

Table SKU {
  id integer [primary key, increment]
  value varchar(500)
  price float
  stock integer
  image varchar
  productId integer
  createdById integer
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
    productId
  }
}

Table Brand {
  id integer [primary key, increment]
  logo varchar(1000)
  name varchar(500)
  createdById integer [null]
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

Table CartItem {
  id integer [primary key, increment]
  quantity integer
  skuId integer
  userId integer
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    (userId, skuId) [unique]
    userId
  }
}

Table ProductSKUSnapshot {
  id integer [primary key, increment]
  productName varchar(500)
  skuPrice float
  image varchar
  skuValue varchar(500)
  skuId integer [null]
  orderId integer [null]
  quantity integer
  productId integer [null]
  createdAt datetime [default: `now()`]
}

Table Order {
  id integer [primary key, increment]
  userId integer
  status OrderStatus
  receiver json
  paymentId integer
  createdById integer [null]
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
    (status, deletedAt)
  }
}

Table Payment {
  id integer [primary key, increment]
  status PaymentStatus
  createdAt datetime [default: `now()`]
  updatedAt datetime
}

Table Websocket {
  id varchar [primary key]
  userId integer
  createdAt datetime [default: `now()`]
}

Table Review {
  id integer [primary key, increment]
  content varchar
  rating integer
  productId integer
  userId integer
  orderId integer
  createdAt datetime [default: `now()`]
  updatedAt datetime
  updateCount integer [default: 0]

  indexes {
    (orderId, productId) [unique]
    userId
    productId
  }
}

Table ReviewMedia {
  id integer [primary key, increment]
  url varchar(1000)
  type MediaType
  reviewId integer
  createdAt datetime [default: `now()`]
}

Table PaymentTransaction {
  id integer [primary key, increment]
  gateway varchar(100)
  transactionDate datetime [default: `now()`]
  accountNumber varchar(100) [null]
  subAccount varchar(250) [null]
  amountIn integer [default: 0]
  amountOut integer [default: 0]
  accumulated integer [default: 0]
  code varchar(250) [null]
  transactionContent varchar [null]
  referenceNumber varchar(255) [null]
  body varchar [null]
  createdAt datetime [default: `now()`]
}

Table Message {
  id integer [primary key, increment]
  fromUserId integer
  toUserId integer
  content varchar
  readAt datetime [null]
  createdAt datetime [default: `now()`]
}

Table SlideShow {
  id integer [primary key, increment]
  image varchar
  createdById integer
  updatedById integer [null]
  deletedById integer [null]
  deletedAt datetime [null]
  createdAt datetime [default: `now()`]
  updatedAt datetime

  indexes {
    deletedAt
  }
}

// Junction tables for many-to-many relationships
Table Role_Permission {
  roleId integer
  permissionId integer

  indexes {
    (roleId, permissionId) [unique]
  }
}

Table Product_Category {
  productId integer
  categoryId integer

  indexes {
    (productId, categoryId) [unique]
  }
}

Table Order_Product {
  orderId integer
  productId integer

  indexes {
    (orderId, productId) [unique]
  }
}
Ref: User.roleId > Role.id
Ref: User.createdById > User.id
Ref: User.updatedById > User.id
Ref: User.deletedById > User.id 

Ref: VerificationCode.email - User.email

Ref: Device.userId > User.id
Ref: RefreshToken.userId > User.id
Ref: RefreshToken.deviceId > Device.id

Ref: Permission.createdById > User.id
Ref: Permission.updatedById > User.id
Ref: Permission.deletedById > User.id
Ref: Role_Permission.roleId > Role.id
Ref: Role_Permission.permissionId > Permission.id

Ref: Role.createdById > User.id
Ref: Role.updatedById > User.id
Ref: Role.deletedById > User.id

Ref: Product.brandId > Brand.id
Ref: Product.createdById > User.id 
Ref: Product.updatedById > User.id 
Ref: Product.deletedById > User.id 
Ref: Product_Category.productId > Product.id 
Ref: Product_Category.categoryId > Category.id

Ref: Category.parentCategoryId > Category.id 
Ref: Category.createdById > User.id
Ref: Category.updatedById > User.id 
Ref: Category.deletedById > User.id 

Ref: SKU.productId > Product.id
Ref: SKU.createdById > User.id
Ref: SKU.updatedById > User.id
Ref: SKU.deletedById > User.id

Ref: Brand.createdById > User.id
Ref: Brand.updatedById > User.id
Ref: Brand.deletedById > User.id

Ref: CartItem.skuId > SKU.id
Ref: CartItem.userId > User.id

Ref: ProductSKUSnapshot.skuId > SKU.id
Ref: ProductSKUSnapshot.orderId > Order.id
Ref: ProductSKUSnapshot.productId > Product.id
Ref: Order.userId > User.id
Ref: Order.paymentId > Payment.id
Ref: Order.createdById > User.id
Ref: Order.updatedById > User.id
Ref: Order.deletedById > User.id 
Ref: Order_Product.orderId > Order.id 
Ref: Order_Product.productId > Product.id

Ref: Websocket.userId > User.id 

Ref: Review.productId > Product.id
Ref: Review.userId > User.id
Ref: Review.orderId > Order.id 

Ref: ReviewMedia.reviewId > Review.id

Ref: Message.fromUserId > User.id
Ref: Message.toUserId > User.id

Ref: SlideShow.createdById > User.id
Ref: SlideShow.updatedById > User.id
Ref: SlideShow.deletedById > User.id 